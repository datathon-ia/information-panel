//  _flexbox

@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1;
  -webkit-flex: initial;
}

@mixin inline-flex {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -moz-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

@mixin flex-wrap($value: nowrap) {
  // No Webkit Box fallback.
  -webkit-flex-wrap: $value;
  -moz-flex-wrap: $value;
  flex: 1 1 auto;

  @if $value == nowrap {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $value;
  }
  flex-wrap: $value;
}

@mixin flex($fg: 1, $fs: null, $fb: null) {
  -webkit-box-flex: $fg;
  -webkit-flex: $fg $fs $fb;
  -moz-box-flex: $fg;
  -moz-flex: $fg $fs $fb;
  -ms-flex: $fg $fs $fb;
  flex: $fg $fs $fb;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
  -moz-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
  -webkit-align-items: $align;
  -moz-align-items: $align;
  -ms-align-items: $align;
  align-items: $align;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
  -moz-justify-content: $justify;
  -ms-justify-content: $justify;
  justify-content: $justify;
  -ms-flex-pack: $justify;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
  -moz-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}

//  _Object-fit

// This mixin can be used to set the object-fit:
// @include object-fit(contain);
// or object-fit and object-position:
// @include object-fit(cover, top);

@mixin object-fit($fit: fill, $position: null) {
  -o-object-fit: $fit;
  object-fit: $fit;
  @if $position {
    -o-object-position: $position;
    object-position: $position;
    font-family: 'object-fit: #{$fit}; object-position: #{$position}';
  } @else {
    font-family: 'object-fit: #{$fit}';
  }
}

// Transitions

@mixin transition($val: ease 0.5s) {
  -webkit-transition: $val;
  -moz-transition: $val;
  -o-transition: $val;
  transition: $val;
  -ms-transition: $val;
  webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

// Fonts

@mixin font($ff: 'UniversLTStd') {
  font-family: $ff;
  @if $ff == 'UniversLTStd' {
    font-weight: normal;
    font-style: normal;
  } @else if $ff == 'Verdana-Bold' {
    font-weight: normal;
    font-style: normal;
  } @else if $ff == 'Verdana-Italic' {
    font-weight: normal;
    font-style: normal;
  } @else if $ff == 'Verdana-BoldItalic' {
    font-weight: normal;
    font-style: normal;
  } @else if $ff == 'Verdana' {
    font-weight: normal;
    font-style: normal;
  } @else if $ff == 'BlairITCStd-Bold' {
    font-weight: normal;
    font-style: normal;
  } @else if $ff == 'UniversLTStd-Bold' {
    font-weight: normal;
    font-style: normal;
  } @else if $ff == 'UniversLTStd-Black' {
    font-weight: normal;
    font-style: normal;
  } @else if $ff == 'UniversLTStd-BoldObl' {
    font-weight: normal;
    font-style: normal;
  } @else if $ff == 'UniversLTStd-Light' {
    font-weight: normal;
    font-style: normal;
  } @else if $ff == 'UniversLTStd-Obl' {
    font-weight: normal;
    font-style: normal;
  } @else if $ff == 'UniversLTStd-LightObl' {
    font-weight: normal;
    font-style: normal;
  }
}

$sizes: ('xs', 0.5), ('sm', 0.75), ('md', 1), ('gutter', 2), ('lg', 3),
  ('xl', 4), ('xxl', 5), ('giant', 8);

// Margin
.m-a-0 {
  margin: 0 !important;
}

.m-t-0 {
  margin-top: 0 !important;
}

.m-r-0 {
  margin-right: 0 !important;
}

.m-b-0 {
  margin-bottom: 0 !important;
}

.m-l-0 {
  margin-left: 0 !important;
}

.m-x-0 {
  margin-right: 0 !important;
  margin-left: 0 !important;
}

.m-y-0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

// Padding
.p-a-0 {
  padding: 0 !important;
}

.p-t-0 {
  padding-top: 0 !important;
}

.p-r-0 {
  padding-right: 0 !important;
}

.p-b-0 {
  padding-bottom: 0 !important;
}

.p-l-0 {
  padding-left: 0 !important;
}

.p-x-0 {
  padding-left: 0 !important;
  padding-right: 0 !important;
}

.p-y-0 {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

@each $size, $em in $sizes {
  .m-a-#{$size} {
    margin: #{$em}rem !important;
  }
  .m-t-#{$size} {
    margin-top: #{$em}rem !important;
  }
  .m-r-#{$size} {
    margin-right: #{$em}rem !important;
  }
  .m-b-#{$size} {
    margin-bottom: #{$em}rem !important;
  }
  .m-l-#{$size} {
    margin-left: #{$em}rem !important;
  }
  .m-x-#{$size} {
    margin-right: #{$em}rem !important;
    margin-left: #{$em}rem !important;
  }
  .m-y-#{$size} {
    margin-top: #{$em}rem !important;
    margin-bottom: #{$em}rem !important;
  }

  .p-a-#{$size} {
    padding: #{$em}rem !important;
  }
  .p-t-#{$size} {
    padding-top: #{$em}rem !important;
  }
  .p-r-#{$size} {
    padding-right: #{$em}rem !important;
  }
  .p-b-#{$size} {
    padding-bottom: #{$em}rem !important;
  }
  .p-l-#{$size} {
    padding-left: #{$em}rem !important;
  }
  .p-x-#{$size} {
    padding-right: #{$em}rem !important;
    padding-left: #{$em}rem !important;
  }
  .p-y-#{$size} {
    padding-top: #{$em}rem !important;
    padding-bottom: #{$em}rem !important;
  }
}

// Gradients

@mixin gradient($left: $primary, $right: $lipstick) {
  background: #{$left}; /* Old browsers */
  background: -moz-linear-gradient(
    left,
    #{$left} 0%,
    #{$right} 51%,
    #{$right} 100%
  ); /* FF3.6-15 */
  background: -webkit-linear-gradient(
    left,
    #{$left} 0%,
    #{$right} 51%,
    #{$right} 100%
  ); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(
    to right,
    #{$left} 0%,
    #{$right} 51%,
    #{$right} 100%
  ); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$left}', endColorstr='#{$right}', GradientType=1); /* IE6-9 */
}

@mixin gradient-col($top: $primary, $bottom: $lipstick) {
  background: #{$top}; /* Old browsers */
  background: -moz-linear-gradient(
    top,
    #{$top} 0%,
    #{$bottom} 51%,
    #{$bottom} 100%
  ); /* FF3.6-15 */
  background: -webkit-linear-gradient(
    top,
    #{$top} 0%,
    #{$bottom} 51%,
    #{$bottom} 100%
  ); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(
    to bottom,
    #{$top} 0%,
    #{$bottom} 51%,
    #{$bottom} 100%
  ); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$top}', endColorstr='#{$bottom}', GradientType=1); /* IE6-9 */
}

@mixin gradient-hover($left: $primary, $right: $lipstick) {
  background: #{$left}; /* Old browsers */
  background: -moz-linear-gradient(
    left,
    #{$left} 12%,
    #{$right} 51%,
    #{$right} 100%
  ); /* FF3.6-15 */
  background: -webkit-linear-gradient(
    left,
    #{$left} 12%,
    #{$right} 51%,
    #{$right} 100%
  ); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(
    to right,
    #{$left} 12%,
    #{$right} 51%,
    #{$right} 100%
  ); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$left}', endColorstr='#{$right}', GradientType=1); /* IE6-9 */
}

@mixin gradient-diag($left: $primary, $right: $lipstick) {
  background: #{$left}; /* Old browsers */
  background: -moz-linear-gradient(
    -45deg,
    #{$left} 0%,
    #{$right} 100%
  ); /* FF3.6-15 */
  background: -webkit-linear-gradient(
    -45deg,
    #{$left} 0%,
    #{$right} 100%
  ); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(
    135deg,
    #{$left} 0%,
    #{$right} 100%
  ); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$left}', endColorstr='#{$right}', GradientType=1); /* IE6-9 fallback on horizontal gradient */
}

// Shadow

@mixin shadow($shadow-color: $black) {
  box-shadow: 0 42px 64px rgba($shadow-color, 0.16);
}

@mixin shadow-small($shadow-color: $black) {
  box-shadow: 0 24px 44px rgba($shadow-color, 0.1);
}

// Responsive

// _Media Queries

// add thoses mixins only if it s necessary

@mixin small-mobile {
  @media screen and (max-width: #{$small-mobile}) {
    @content;
  }
}

@mixin before {
  content: '';
  position: absolute;
  display: inline-block;
}

/*
This mixin can be used to set the object-fit:
@include object-fit(contain);
or object-fit and object-position:
@include object-fit(cover, top);
*/
@mixin object-fit($fit: fill, $position: null) {
  -o-object-fit: $fit;
  object-fit: $fit;
  @if $position {
    -o-object-position: $position;
    object-position: $position;
    font-family: 'object-fit: #{$fit}; object-position: #{$position}';
  } @else {
    font-family: 'object-fit: #{$fit}';
  }
}
